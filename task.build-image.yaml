apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-image
  namespace: platform-team-pipelines
spec:
  params:
  - name: imageVersion
  - name: sourceGitUrl
  - name: targetImage
  - name: sourceDockerfilePath
  workspaces:
  - name: dockerfile-source

  steps:
  - name: git-checkout
    image: alpine/git:v2.26.2
    workingDir: "$(workspaces.dockerfile-source.path)"
    script: |
      #!/usr/bin/env sh
      set -e
      #eval $(ssh-agent)
      #ssh-add ~/.ssh/id_*
      #git config --global core.sshCommand 'ssh -o StrictHostKeyChecking=accept-new'
      git init
      git remote add origin $(params.sourceGitUrl)
      git fetch --depth 1 origin $(params.imageVersion)
      git checkout FETCH_HEAD

  - name: build-image
    image: quay.io/buildah/stable
    workingDir: "$(workspaces.dockerfile-source.path)/$(params.sourceDockerfilePath)"
    command: ['buildah', 'bud', '--tls-verify=false', '--layers', '-f', 'Dockerfile', '-t', '$(params.targetImage):$(params.imageVersion)', '.']
    volumeMounts:
    - name: varlibc
      mountPath: /var/lib/containers
    securityContext:
      allowPrivilegeEscalation: true
      runAsUser: 0
      privileged: true

  - name: build-push
    image: quay.io/buildah/stable
    command: ["buildah", "push", "--tls-verify=false", "$(params.targetImage):$(params.imageVersion)", "docker://$(params.targetImage):$(params.imageVersion)"]
    volumeMounts:
    - name: varlibc
      mountPath: /var/lib/containers
    securityContext:
      allowPrivilegeEscalation: true
      runAsUser: 0
      privileged: true

  volumes:
  - name: varlibc
    emptyDir: {}
---
